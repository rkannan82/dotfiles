" Mappings {{{
" set a map leader for more key combos
let mapleader=","
let maplocalleader="\\"

" remap esc
"inoremap <esc>  <NOP>
"inoremap jk <esc>
"
" shortcut to save
nmap <leader>, :w<cr>

nnoremap <silent> <leader>/ :noh<CR>
nnoremap <silent> <leader>qq :call QuickFixToggle()<CR>
nnoremap <leader>g :execute "grep! -R " . shellescape(expand("<cWORD>")) . " " . expand('%:p')<cr>:copen<cr>
" }}}

" Import all other VIM settings
so ${DOTFILES_DIR}/vim/settings.vim

" CDC = Change to Directory of Current file
command! Cdc cd %:p:h

if (has("nvim"))
  "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
"For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
"Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
" < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
if (has("termguicolors"))
  "set termguicolors
endif

au User lsp_setup call lsp#register_server({
    \ 'name': 'CiderLSP',
    \ 'cmd': {server_info->[
    \   '/google/bin/releases/editor-devtools/ciderlsp',
    \   '--tooltag=vim-lsp',
    \   '--noforward_sync_responses',
    \ ]},
    \ 'whitelist': ['c', 'cc', 'cpp', 'proto', 'textproto', 'go'],
    \})

" Auto commands {{{
augroup filetype_vim
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup END
" }}}

" Options {{{
filetype plugin on
filetype indent on

set mouse=a
set hls
set nu
set ruler
set vb t_vb=
set autoindent
set incsearch
set smartcase
set ic
set showmode
let loaded_matchparen=1
set updatetime=1000
set showtabline=0
set modifiable
set nobackup
set nowb
set noswapfile
set expandtab
set cursorline
set smarttab
" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2
" auto format lines using textwidth
set textwidth=80
set formatoptions+=tj
set completeopt+=longest
set nojoinspaces

set laststatus=2

" don't display welcome
set shortmess+=I

" qq to record, Q to replay
nnoremap Q @q
" }}}

" Show highlighting group used at the cursor {{{
function! HighlightGroup()
echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
  \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
  \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"
endfunction
" }}}

" Toggle quickfix {{{
function! QuickFixToggle()
  if exists("g:qfix_win")
    cclose
    unlet g:qfix_win
  else
    copen 10
    let g:qfix_win = bufnr("$")
  endif
endfunction
" }}}
